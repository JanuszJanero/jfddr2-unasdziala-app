{"version":3,"sources":["firebase/config.js","components/SearchBar.js","components/Navbar.js","components/Service.js","components/ServiceDetails.js","components/ServicesList.js","helpers/categories.js","components/AddService.js","components/LandingPage.js","components/SignUpUser.js","components/SignInUser.js","components/UserService.js","components/ModifyService.js","components/UserPanel.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SearchBar","serviceList","setSearchedServices","useState","form","setForm","className","type","placeholder","onChange","e","value","target","to","onClick","filteredData","filter","service","description","toLowerCase","trim","includes","city","category","title","price","Navbar","userLogInState","setUserLogInState","logOut","auth","signOut","alert","class","Service","url","useRouteMatch","ServiceDetails","services","serviceTitle","useParams","selectedService","find","phoneNumber","fullName","email","style","color","detailDescription","date","ServicesList","path","exact","map","id","categories","name","AddService","setDummyVariable","categoriesList","setCategoriesList","useEffect","categoriesArray","forEach","push","setCategory","length","address","updateField","format","Date","parse","locale","pl","firestore","collection","add","required","LandingPage","setServicesFilteredByCategory","activeClassName","filteredServicesArray","filterByCategory","SignUpUser","password","credentials","setCredentials","createUserWithEmailAndPassword","then","cred","console","log","catch","reason","message","SignInUser","signInWithEmailAndPassword","UserService","userService","doc","delete","error","ModifyService","userServiceList","userServiceTitle","defaultValue","randomDate","update","setTimeout","window","location","reload","UserPanel","user","Main","searchedServices","servicesFilteredByCategory","Footer","App","dummyVariable","setServiceList","filteredServices","setFilteredServices","get","snapshot","docs","data","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8f6ddaa1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBOFaeQBfY2T24vXPyZd8uSD3Ja_4fNO-M\",\n  authDomain: \"skillshop-cd94a.firebaseapp.com\",\n  projectId: \"skillshop-cd94a\",\n  storageBucket: \"skillshop-cd94a.appspot.com\",\n  messagingSenderId: \"321565544929\",\n  appId: \"1:321565544929:web:43f71f16373424848342a0\"\n};\n\nexport default firebase.initializeApp(firebaseConfig);","import \"./../styles/SearchBar.css\";\n\nimport { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SearchBar({ serviceList, setSearchedServices }) {\n  const [form, setForm] = useState(\"\");\n\n  const updateField = (value) => {\n    setForm(value);\n  };\n\n  const handleFilterServices = () => {\n    const value = form;\n    const filteredData = serviceList.filter((service) => {\n      return (\n        service.description\n          .toLowerCase()\n          .trim()\n          .includes(value.toLowerCase().trim()) ||\n        service.city\n          .toLowerCase()\n          .trim()\n          .includes(value.toLowerCase().trim()) ||\n        service.category\n          .toLowerCase()\n          .trim()\n          .includes(value.toLowerCase().trim()) ||\n        service.title\n          .toLowerCase()\n          .trim()\n          .includes(value.toLowerCase().trim()) ||\n        service.price.toLowerCase().trim().includes(value.toLowerCase().trim())\n      );\n    });\n\n    setSearchedServices(filteredData);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        className=\"nav-input\"\n        type=\"text\"\n        placeholder=\"Znajdź usługę...\"\n        onChange={(e) => updateField(e.target.value)}\n      />\n      <Link className=\"custom-link\" to=\"/searched-services\">\n        <button className=\"search-btn\" onClick={handleFilterServices}>\n          &#127859;\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import \"./../styles/Navbar.css\";\nimport firebase from \"./../firebase/config.js\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\n\nconst Navbar = ({ serviceList, userLogInState, setUserLogInState, setSearchedServices  }) => {\n\n  const logOut = () => {\n    firebase.auth().signOut();\n    setUserLogInState(false);\n    alert(\"Pomyślnie wylogowano\");\n  }\n\n  const checkUserLogInState = () => {\n    if(!userLogInState){\n      return (\n      <div className=\"unregistered-user\">\n        <Link className=\"custom-link\" to=\"/sign-up-user\">\n          <button className=\"nav-button\">REJESTRACJA</button>\n        </Link>\n        <Link className=\"custom-link\" to=\"/sign-in-user\">\n          <button className=\"nav-button\">LOGOWANIE</button>\n        </Link>      \n      </div>      \n      )\n    } else if(!!userLogInState) {\n      return(\n        <div className=\"registered-user\">\n          <Link className=\"custom-link\" to=\"/addTask\">\n            <button className=\"nav-button\">DODAJ<br></br>USŁUGĘ</button>\n          </Link>\n          <Link className=\"custom-link\" to=\"/user-panel\">\n            <button class=\"nav-button\">PANEL<br></br>UŻYTKOWNIKA</button>\n          </Link>\n          <Link className=\"custom-link\" to=\"/\">\n            <button className=\"nav-button\" onClick={logOut}>WYLOGUJ<br></br>UŻYTKOWNIKA</button>\n          </Link>    \n        </div>\n      )\n    }\n  }\n  \n  return (\n    <div className=\"navbar\">\n      <Link className=\"logo-link\" to=\"/\">\n        <div className=\"nav-logo\">SkillShop</div>\n      </Link>\n      <SearchBar serviceList={serviceList} setSearchedServices={setSearchedServices}/>\n      {checkUserLogInState()}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import \"./../styles/Service.css\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nconst Service = ({ service }) => {\n  const { url } = useRouteMatch();\n\n  return (\n    <div className=\"service\">\n      <div className=\"informations\">\n        <div className=\"header\">\n          <h1>{service.title}</h1>\n          <div>{service.description}</div>\n        </div>\n        <div className=\"data\">\n          <div>\n            <b>Kategoria usług: </b>\n            {service.category}\n          </div>\n          <div>\n            <b>Miasto: </b>\n            {service.city}\n          </div>\n          <div>\n            <b>Cena: </b>\n            {service.price}\n          </div>\n        </div>\n      </div>\n      <Link className=\"details\" to={`${url}/${service.title}`}>\n        <button className=\"service-button\">SZCZEGÓŁY</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Service;\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"../styles/ServiceDetails.css\";\n\nfunction ServiceDetails({ services, userLogInState }) {\n  const { serviceTitle } = useParams();\n  const selectedService = services.find(\n    (service) => service.title === serviceTitle\n  );\n\n  const showContact = () =>{\n    if(!userLogInState){\n      return(\n      <div className=\"second-info\">\n        <p className=\"contact\">\n          &nbsp; Musisz być zalogowany aby widzieć dane kontaktowe\n        </p>\n        <p className=\"email\" style={{color: \"blue\"}}>\n         <Link className=\"custom-link\" to=\"/sign-in-user\">Logowanie</Link> &nbsp; <Link className=\"custom-link\" to=\"/sign-up-user\">Rejestracja</Link>\n        </p>\n      </div>\n      )\n    } else if(!!userLogInState){\n      return(\n      <div className=\"second-info\">\n        <p className=\"contact\">\n          <i class=\"lni lni-phone\"></i>\n          {selectedService?.phoneNumber},&nbsp;&nbsp;\n          {selectedService?.fullName}\n        </p>\n        <p className=\"email\">\n          <i class=\"lni lni-envelope\"></i>\n          {selectedService?.email}\n        </p>\n      </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"details\">\n      <div className=\"title\">{selectedService?.title}</div>\n      <div className=\"info\">\n        <div className=\"info-box\">\n          <div className=\"first-info\">\n            <p className=\"location\">\n              <i class=\"lni lni-home\"></i>\n              {selectedService?.city}\n            </p>\n            <p className=\"price\">\n              <i class=\"lni lni-wallet\"></i>\n              {selectedService?.price}\n            </p>\n          </div>\n\n          {showContact()}\n          {/* <div className=\"second-info\">\n            <p className=\"contact\">\n              <i class=\"lni lni-phone\"></i>\n              {selectedService?.phoneNumber},&nbsp;&nbsp;\n              {selectedService?.fullName}\n            </p>\n            <p className=\"email\">\n              <i class=\"lni lni-envelope\"></i>\n              {selectedService?.email}\n            </p>\n          </div> */}\n\n\n\n        </div>\n        <p className=\"description\">\n          Opis:&nbsp;&nbsp;{selectedService?.detailDescription}\n        </p>\n        <p className=\"date\">dodane:&nbsp;&nbsp;{selectedService?.date}</p>\n      </div>\n      <Link to=\"/all-services\">\n        <button className=\"button-back\">Powrót</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default ServiceDetails;\n","import \"./../styles/ServiceList.css\";\nimport { Link, useRouteMatch, Switch, Route } from \"react-router-dom\";\nimport Service from \"./Service.js\";\nimport ServiceDetails from \"./ServiceDetails.js\";\n\nconst ServicesList = ({ serviceList, userLogInState }) => {\n  const { path } = useRouteMatch();\n\n  return (\n    <div className=\"service-list\">\n      <Switch>\n        <Route exact path={path}>\n          <h1>LISTA DOSTĘPNYCH OFERT: </h1>\n          {serviceList.map((service) => {\n            return <Service key={service.id} service={service} />;\n          })}\n          <Link to=\"/\">\n            <button className=\"list-button\">POWRÓT ⇦</button>\n          </Link>\n        </Route>\n        <Route path={`${path}/:serviceTitle`}>\n          <ServiceDetails \n          services={serviceList} \n          userLogInState={userLogInState}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ServicesList;\n","// import { Route, Switch } from \"react-router-dom\";\n// import ServicesList from \"../components/ServicesList\";\n\nexport const categories = [\n  {\n    name: \"Budownictwo\",\n    path: \"/construction-services\",\n    filter: \"Usługi budowlane\",\n  },\n  {\n    name: \"Hydraulika\",\n    path: \"/hydraulic-services\",\n    filter: \"Usługi hydrauliczne\",\n  },\n  {\n    name: \"Elektryka\",\n    path: \"/electrical-services\",\n    filter: \"Usługi elektryczne\",\n  },\n  {\n    name: \"Wykończenia\",\n    path: \"/finishing-services\",\n    filter: \"Usługi wykończeniowe\",\n  },\n  {\n    name: \"Stolarstwo\",\n    path: \"/carpentry-services\",\n    filter: \"Usługi stolarskie\",\n  },\n  {\n    name: \"Architektura\",\n    path: \"/architecture-services\",\n    filter: \"Usługi architektoniczne\",\n  },\n  {\n    name: \"Sprzątanie\",\n    path: \"/cleaning-services\",\n    filter: \"Usługi sprzątające\",\n  },\n  {\n    name: \"Malowanie\",\n    path: \"/painting-services\",\n    filter: \"Usługi malarskie\",\n  },\n  {\n    name: \"Transport\",\n    path: \"/transport-services\",\n    filter: \"Usługi transportowe\",\n  },\n  {\n    name: \"IT\",\n    path: \"/it-services\",\n    filter: \"Usługi informatyczne\",\n  },\n  {\n    name: \"Inne\",\n    path: \"/other-services\",\n    filter: \"Usługi różne\",\n  },\n  // i tak dalej\n];\n\n// \"/\"\n// \"/architecture-services\"\n// \"/cleaning-services\"\n// \"/painting-services\"\n// \"/transport-services\"\n// \"/it-services\"\n// \"/chimney-services\"\n// \"/all-services\"","import { format } from \"date-fns\";\nimport { pl } from \"date-fns/locale\";\n\nimport \"./../styles/AddService.css\";\nimport firebase from \"./../firebase/config.js\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { categories } from \"../helpers/categories\";\n\nconst AddService = ({ setDummyVariable, serviceList, userLogInState }) => {\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  useEffect(() => {\n    const categoriesArray = [];\n    categories.forEach((category) => {\n      categoriesArray.push(category.filter);\n    });\n    setCategoriesList(categoriesArray);\n  }, []);\n\n  const [category, setCategory] = useState(\"Usługi budowlane\");\n\n  const [form, setForm] = useState({\n    id: serviceList.length,\n    title: \"\",\n    category: \"\",\n    fullName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    city: \"\",\n    address: \"\",\n    description: \"\",\n    detailDescription: \"\",\n    price: \"\",\n  });\n\n  const updateField = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n      /*UWAGA! category nie zadziała jeśli dodatkowo jakieś inne pole nie zostanie zmienione. \n      Zastanowić się nad walidacją */\n      category: category,\n      date: format(Date.parse(new Date()), \"dd MMMM yyyy HH:mm:ss\", {\n        locale: pl,\n      }),\n      user: userLogInState,\n    });\n  };\n\n  const addServiceToDB = () => {\n    firebase.firestore().collection(\"services\").add(form);\n    setDummyVariable(serviceList.length);\n    alert(\"Pomyślnie dodano ogłoszenie\");\n  };\n\n  return (\n    <div className=\"add-service\">\n      <form className=\"frame-addservice\">\n        <label className=\"label-addservice\">\n          Wybierz typ usługi:&nbsp;&nbsp;\n          <select\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            {categoriesList.map((category, id) => {\n              return (\n                <option key={id} value={category}>\n                  {category}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n\n        {/* <input type=\"submit\" value=\"Wyślij\" /> */}\n        <div className=\"service-container-input\">\n          <label>\n            {/* Tytuł usługi:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Tytuł usługi\"\n              id=\"title\"\n              name=\"title\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Imię i nazwisko:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Imię i nazwisko\"\n              id=\"fullName\"\n              name=\"fullName\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Adres email:&nbsp;&nbsp; */}\n            <input\n              type=\"email\"\n              placeholder=\"Adres email\"\n              id=\"email\"\n              name=\"email\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Numer telefonu:&nbsp;&nbsp; */}\n            <input\n              type=\"tel\"\n              placeholder=\"Numer telefonu\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Adres:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Adres\"\n              id=\"address\"\n              name=\"address\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Miasto:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Miasto\"\n              id=\"city\"\n              name=\"city\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Opis usługi:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Opis usługi\"\n              id=\"description\"\n              name=\"description\"\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Cena:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Cena\"\n              id=\"price\"\n              name=\"price\"\n              onChange={updateField}\n            />\n          </label>\n          <textarea\n            placeholder=\"Szczegółowy opis Twojego ogłoszenia\"\n            id=\"detailDescription\"\n            name=\"detailDescription\"\n            className=\"textarea\"\n            onChange={updateField}\n          />\n        </div>\n      </form>\n      <div className=\"btn-container\">\n        <Link className=\"custom-link\" to=\"/\">\n          <button\n            className=\"add-button green\"\n            onClick={addServiceToDB}\n            required\n          >\n            DODAJ\n          </button>\n        </Link>\n        &nbsp;\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button red\">ANULUJ</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default AddService;\n","import \"./../styles/LandingPage.css\";\nimport { Link } from \"react-router-dom\";\nimport { categories } from \"../helpers/categories\";\n\nconst LandingPage = ({ serviceList, setServicesFilteredByCategory }) => {\n  \n  const filterByCategory = (e, category) => {\n    let filteredServicesArray = [];\n    filteredServicesArray = serviceList.filter(\n      (service) => service.category === category\n    );\n    setServicesFilteredByCategory(filteredServicesArray);\n  };\n\n  return (\n    <div className=\"container\">\n    <div className=\"container-wrap\">\n      {categories.map(category =>{\n        return(\n            <Link className=\"link\" exact activeClassName=\"active\" to={category.path}>\n            <div\n              className=\"box\"\n              onClick={(e) => filterByCategory(e, category.filter)}\n            >\n              {category.name}\n            </div>\n          </Link>\n        )\n      })}\n      <Link className=\"link\" exact activeClassName=\"active\" to=\"/all-services\">\n        <div className=\"box1\">Wszystkie</div>\n      </Link>\n    </div>\n\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import firebase from \"./../firebase/config.js\";\nimport \"./../styles/SignUpUser.css\";\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst SignUpUser = () => {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const updateField = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const signUpUser = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(credentials.email, credentials.password)\n      .then((cred) => {\n        console.log(cred);\n        firebase.auth().signOut();\n        alert(\"Rejestracja zakończona sukcesem\");\n      })\n      .catch((reason) => {\n        alert(reason.message);\n      });\n  };\n\n  return (\n    <div className=\"sign-up-user\">\n      <h1>Rejestracja</h1>\n      <br/>\n      <form className=\"credentials\">\n        <label>\n          Email:&nbsp;&nbsp;\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={updateField}\n            required\n          />\n        </label>\n        &nbsp;\n        <label>\n          Hasło:&nbsp;&nbsp;\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={updateField}\n            required\n          />\n        </label>\n      </form>\n      &nbsp;\n      <div className=\"btn-container\">\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button green\" onClick={signUpUser}>\n            REJESTRACJA\n          </button>\n        </Link>\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button red\">ANULUJ</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpUser;\n","import firebase from \"./../firebase/config.js\";\nimport \"./../styles/SignUpUser.css\";\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst SignInUser = ({ setUserLogInState }) => {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const updateField = (e) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const signInUser = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then((cred) => {\n        console.log(cred);\n        setUserLogInState(credentials.email);\n      })\n      .catch((reason) => {\n        alert(reason.message);\n      });\n  };\n\n  return (\n    <div className=\"sign-up-user\">\n      <h1>Logowanie</h1>\n      <br/>\n      <form className=\"credentials\">\n        <label>\n          Email:&nbsp;&nbsp;\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={updateField}\n            required\n          />\n        </label>\n        &nbsp;\n        <label>\n          Hasło:&nbsp;&nbsp;\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={updateField}\n            required\n          />\n        </label>\n      </form>\n      &nbsp;\n      <div className=\"btn-container\">\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button green\" onClick={signInUser}>\n            LOGOWANIE\n          </button>\n        </Link>\n        <Link className=\"custom-link\"  to=\"/\">\n          <button className=\"add-button red\">ANULUJ</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInUser;\n","import \"./../styles/UserService.css\";\nimport firebase from \"./../firebase/config.js\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nfunction UserService({ userService, setDummyVariable }) {\n  const { url } = useRouteMatch();\n\n  const deleteService = () => {\n    console.log(userService.id);\n    firebase\n      .firestore()\n      .collection(\"services\")\n      .doc(userService.id)\n      .delete()\n      .then(() => {\n        setDummyVariable(userService.id);\n        alert(\"Dokument został pomyślnie usunięty\");\n      })\n      .catch((error) => {\n        alert(\"Błąd podczas usuwania dokumentu: \", error);\n      });\n  };\n\n  return (\n    <div className=\"user-service\">\n      <div className=\"data\">\n        <p>\n          <b>Tytuł: </b>\n          {userService.title}\n        </p>\n        <p>\n          <b>Kategoria: </b>\n          {userService.category}\n        </p>\n        <p>\n          <b>Data dodania: </b>\n          {userService.date}\n        </p>\n      </div>\n      <div className=\"buttons\">\n        <Link className=\"custom-link\" to={`${url}/${userService.title}`}>\n          <button className=\"btn blue\">MODYFIKUJ</button>\n        </Link>\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"btn red\" onClick={deleteService}>\n            USUŃ\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default UserService;\n","import { format } from \"date-fns\";\nimport { pl } from \"date-fns/locale\";\n\nimport firebase from \"./../firebase/config.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { categories } from \"../helpers/categories\";\n\nfunction ModifyService({ userServiceList, userLogInState, setDummyVariable }) {\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  useEffect(() => {\n    const categoriesArray = [];\n    categories.forEach((category) => {\n      categoriesArray.push(category.filter);\n    });\n    setCategoriesList(categoriesArray);\n  }, []);\n\n  const [category, setCategory] = useState(\"Usługi budowlane\");\n\n  const { userServiceTitle } = useParams();\n  const selectedService = userServiceList.find(\n    (service) => service.title === userServiceTitle\n  );\n\n  const [form, setForm] = useState({\n    id: selectedService.id,\n    title: selectedService.title,\n    category: selectedService.category,\n    fullName: selectedService.fullName,\n    email: selectedService.email,\n    phoneNumber: selectedService.phoneNumber,\n    city: selectedService.city,\n    address: selectedService.address,\n    description: selectedService.description,\n    detailDescription: selectedService.detailDescription,\n    price: selectedService.price,\n  });\n\n  const updateField = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n      /*UWAGA! category nie zadziała jeśli dodatkowo jakieś inne pole nie zostanie zmienione. \n      Zastanowić się nad walidacją */\n      category: category,\n      date: selectedService.date,\n      user: userLogInState,\n    });\n  };\n\n  const modifyServiceInDB = () => {\n    const randomDate = format(Date.parse(new Date()), \"dd MMMM yyyy HH:mm:ss\", {\n      locale: pl,\n    });\n    // console.log(randomDate);\n    firebase\n      .firestore()\n      .collection(\"services\")\n      .doc(selectedService.id)\n      .update(form);\n    setDummyVariable(randomDate);\n    setTimeout(()=>{\n      alert(\"Pomyślnie zmodyfikowano ogłoszenie. Prosimy o ponowne zalogowanie do systemu.\");\n      window.location.reload(true);\n    }, 500)\n  };\n\n  return (\n    <div className=\"add-service\">\n      <form className=\"frame-addservice\">\n        <label className=\"label-addservice\">\n          Wybierz typ usługi:&nbsp;&nbsp;\n          <select\n            defaultValue={selectedService.category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            {categoriesList.map((category, id) => {\n              return (\n                <option key={id} value={category}>\n                  {category}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n        <div className=\"service-container-input\">\n          <label>\n            {/* Tytuł usługi:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Tytuł usługi\"\n              id=\"title\"\n              name=\"title\"\n              defaultValue={selectedService.title}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Imię i nazwisko:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Imię i nazwisko\"\n              id=\"fullName\"\n              name=\"fullName\"\n              defaultValue={selectedService.fullName}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Adres email:&nbsp;&nbsp; */}\n            <input\n              type=\"email\"\n              placeholder=\"Adres email\"\n              id=\"email\"\n              name=\"email\"\n              defaultValue={selectedService.email}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Numer telefonu:&nbsp;&nbsp; */}\n            <input\n              type=\"tel\"\n              placeholder=\"Numer telefonu\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              defaultValue={selectedService.phoneNumber}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Adres:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Adres\"\n              id=\"address\"\n              name=\"address\"\n              defaultValue={selectedService.address}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Miasto:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Miasto\"\n              id=\"city\"\n              name=\"city\"\n              defaultValue={selectedService.city}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Opis usługi:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Opis usługi\"\n              id=\"description\"\n              name=\"description\"\n              defaultValue={selectedService.description}\n              onChange={updateField}\n            />\n          </label>\n          <label>\n            {/* Cena:&nbsp;&nbsp; */}\n            <input\n              type=\"text\"\n              placeholder=\"Cena\"\n              id=\"price\"\n              name=\"price\"\n              defaultValue={selectedService.price}\n              onChange={updateField}\n            />\n          </label>\n          <textarea\n            placeholder=\"Szczegółowy opis Twojego ogłoszenia\"\n            id=\"detailDescription\"\n            name=\"detailDescription\"\n            className=\"textarea\"\n            defaultValue={selectedService.detailDescription}\n            onChange={updateField}\n          />\n        </div>\n      </form>\n      <div className=\"btn-container\">\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button green\" onClick={modifyServiceInDB}>\n            MODYFIKUJ\n          </button>\n        </Link>\n        &nbsp;\n        <Link className=\"custom-link\" to=\"/\">\n          <button className=\"add-button red\">ANULUJ</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default ModifyService;\n","import \"./../styles/UserPanel.css\";\nimport { Link, useRouteMatch, Switch, Route } from \"react-router-dom\";\nimport UserService from \"./UserService.js\";\nimport ModifyService from \"./ModifyService.js\";\n\nfunction UserPanel({ serviceList, userLogInState, setDummyVariable }) {\n  const { path } = useRouteMatch();\n\n  const userServiceList = serviceList.filter((service) => {\n    return service.user === userLogInState;\n  });\n\n  return (\n    <div className=\"user-panel\">\n      <Switch>\n        <Route exact path={path}>\n          <h1>LISTA DODANYCH PRZEZ CIEBIE OGŁOSZEŃ: </h1>\n          {userServiceList.map((userService) => {\n            return (\n              <UserService\n                key={userService.id}\n                userService={userService}\n                setDummyVariable={setDummyVariable}\n              />\n            );\n          })}\n          <Link to=\"/\">\n            <button className=\"panel-button\">POWRÓT ⇦</button>\n          </Link>\n        </Route>\n        <Route path={`${path}/:userServiceTitle`}>\n          <ModifyService\n            setDummyVariable={setDummyVariable}\n            userLogInState={userLogInState}\n            userServiceList={userServiceList}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default UserPanel;\n","import \"./../styles/Main.css\";\n\nimport { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ServicesList from \"./ServicesList\";\nimport AddService from \"./AddService.js\";\nimport LandingPage from \"./LandingPage\";\nimport SignUpUser from \"./SignUpUser\";\nimport SignInUser from \"./SignInUser\";\nimport UserPanel from \"./UserPanel\";\n\nimport { categories } from \"../helpers/categories\";\n\nconst Main = ({\n  setDummyVariable,\n  serviceList,\n  userLogInState,\n  setUserLogInState,\n  searchedServices,\n}) => {\n  const [servicesFilteredByCategory, setServicesFilteredByCategory] = useState(\n    []\n  );\n\n  return (\n    <div className=\"main\">\n      <div className=\"main-left\">\n        {/* przestrzeń do wykorzystania w późniejszych wersjach projektu */}\n      </div>\n      <div className=\"main-center\">\n        <Switch>\n          <Route path=\"/addTask\">\n            <AddService\n              setDummyVariable={setDummyVariable}\n              serviceList={servicesFilteredByCategory}\n              userLogInState={userLogInState}\n            />\n          </Route>\n          <Route path=\"/sign-up-user\">\n            <SignUpUser serviceList={serviceList} />\n          </Route>\n          <Route path=\"/sign-in-user\">\n            <SignInUser setUserLogInState={setUserLogInState} />\n          </Route>\n          <Route path=\"/user-panel\">\n            <UserPanel\n              serviceList={serviceList}\n              userLogInState={userLogInState}\n              setDummyVariable={setDummyVariable}\n            />\n          </Route>\n          {categories.map((category) => {\n            return (\n              <Route path={category.path}>\n                <ServicesList serviceList={servicesFilteredByCategory} userLogInState={userLogInState}/>\n              </Route>\n            );\n          })}\n          <Route path=\"/searched-services\">\n            <ServicesList serviceList={searchedServices} userLogInState={userLogInState}/>\n          </Route>\n          <Route path=\"/all-services\">\n            <ServicesList serviceList={serviceList} userLogInState={userLogInState}/>\n          </Route>\n          <Route path=\"/\">\n            <LandingPage\n              serviceList={serviceList}\n              setServicesFilteredByCategory={setServicesFilteredByCategory}\n            />\n          </Route>\n        </Switch>\n      </div>\n      <div className=\"main-right\">\n        {/* przestrzeń do wykorzystania w późniejszych wersjach projektu */}\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./../styles/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>2021 &#169; U nas działa Inc.</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./styles/MainContainer.css\";\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport firebase from \"./firebase/config.js\";\nimport Navbar from \"./components/Navbar.js\";\nimport Main from \"./components/Main.js\";\nimport Footer from \"./components/Footer.js\";\n\n\nfunction App() {\n  const [dummyVariable, setDummyVariable] = useState([]);\n  const [serviceList, setServiceList] = useState([]);\n  const [filteredServices, setFilteredServices] = useState([]);\n  const [searchedServices, setSearchedServices] = useState([]);\n\n  const [userLogInState, setUserLogInState] = useState(\"\");\n\n  useEffect(() => {\n    setFilteredServices(serviceList);\n  }, [serviceList]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"services\")\n      .get()\n      .then((snapshot) => {\n        const services = snapshot.docs.map((service) => {\n          return {\n            ...service.data(),\n            id: service.id,\n          };\n        });\n        setServiceList(services);\n      });\n  }, [dummyVariable]);\n\n  return (\n    <div class=\"main-container\">\n      <Router>\n        <Navbar\n          serviceList={serviceList}\n          userLogInState={userLogInState}\n          setUserLogInState={setUserLogInState}\n          setSearchedServices={setSearchedServices}\n        />\n        <Main\n          serviceList={filteredServices}\n          setServiceList={setServiceList}\n          setDummyVariable={setDummyVariable}\n          setUserLogInState={setUserLogInState}\n          userLogInState={userLogInState}\n          searchedServices={searchedServices}\n        />\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n       <App />\n     </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}